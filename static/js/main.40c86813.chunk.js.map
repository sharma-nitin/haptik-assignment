{"version":3,"sources":["friends-list.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","setAppElement","Friendslist","list","name","isFavourite","useState","friendlist","setfriendlist","friends","setsearchedFriends","isOpen","setIsOpen","search","setSearch","deletecontact","setDeletecontact","newfriend","setnewfriend","errorinAddFriend","seterrorinAddFriend","successinAddFriend","setsuccessinAddFriend","currentPage","setcurrentPage","slice","currentPageData","setcurrentPageData","toggleModal","friend","className","type","placeholder","value","onChange","event","target","replace","updateField","onKeyPress","e","key","trim","length","new_friend","existingcontacts","i","toLowerCase","push","addNewFriend","searchedData","filter","startsWith","onRequestClose","contentLabel","overlayClassName","onClick","updatedData","map","restData","item","updateRecord","unshift","updateFavourite","class","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","activeClass","pageNumber","upperLimit","parseInt","lowerLimit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40c86813.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport './friends-list.css'\r\nimport Modal from \"react-modal\";\r\nimport Pagination from \"react-js-pagination\"\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const Friendslist = () => {\r\n\r\n    var list = [{ name: 'Rahul Gupta', isFavourite: true },\r\n    { name: 'Shivangi sharma', isFavourite: false },\r\n    { name: 'Akash Singh', isFavourite: false },\r\n    { name: 'Ayush', isFavourite: false },\r\n    { name: 'Stephen', isFavourite: false }]\r\n\r\n    const [friendlist, setfriendlist] = useState(list);\r\n    const [friends, setsearchedFriends] = useState(list);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [search, setSearch] = useState(''); \r\n    const [deletecontact, setDeletecontact] = useState('');\r\n    const [newfriend, setnewfriend] = useState('');\r\n    const [errorinAddFriend, seterrorinAddFriend]= useState('');\r\n    const [successinAddFriend, setsuccessinAddFriend]= useState('');\r\n    const [currentPage,setcurrentPage]= useState(1);\r\n    const [currentPageData,setcurrentPageData]= useState(friends.slice(0,4));\r\n\r\n    function toggleModal(friend) {\r\n        setDeletecontact(friend.name);\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    function deleteContact(){\r\n        const updatedData = friendlist.filter(function (friend) {\r\n            return friend.name !== deletecontact\r\n        })\r\n        setsearchedFriends([...updatedData])\r\n        setfriendlist([...updatedData])\r\n        setcurrentPage(1)\r\n        setcurrentPageData(updatedData.slice(0,4))\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    const updateSearch = (event) => {\r\n        setSearch(event.target.value);\r\n        const searchedData = friendlist.filter(function (friend) {\r\n            return friend.name.toLowerCase().startsWith(event.target.value.trim().toLowerCase())\r\n        })\r\n        setsearchedFriends([...searchedData]);\r\n        setcurrentPage(1);\r\n        setcurrentPageData(searchedData.slice(0,4))\r\n    }\r\n\r\n    function updateFavourite(friend) {\r\n        if (!friend.isFavourite) {\r\n           let restData = friends.filter(function(item) {\r\n                return item.name !== friend.name\r\n            })\r\n           let updateRecord = {\r\n                name:friend.name,\r\n                isFavourite:true\r\n            }\r\n            restData.unshift(updateRecord)  // Add newly favourite to top of array\r\n            setsearchedFriends([...restData]);\r\n            setfriendlist([...restData])\r\n            setcurrentPage(1);\r\n            setcurrentPageData(restData.slice(0,4))\r\n        } else {\r\n\r\n            let restData = friends.filter(function(item) {\r\n                return item.name !== friend.name\r\n            })\r\n           let updateRecord = {\r\n                name:friend.name,\r\n                isFavourite:false\r\n            }\r\n            restData.push(updateRecord)  // Add removed favourite to end of array\r\n            setsearchedFriends([...restData]);\r\n            setfriendlist([...restData])\r\n            setcurrentPage(1);\r\n            setcurrentPageData(restData.slice(0,4))\r\n        }\r\n    }\r\n\r\n    function addNewFriend(event){\r\n        setsuccessinAddFriend('');\r\n        if(event.key ==='Enter'){\r\n          if(newfriend.trim().length >0){\r\n              const new_friend = {\r\n                  name:newfriend,\r\n                  isFavourite:false\r\n              }\r\n              const existingcontacts = friends;\r\n              for(let i=0;i<existingcontacts.length;i++){\r\n                  if(existingcontacts[i].name.toLowerCase() === newfriend.toLowerCase()){\r\n                    seterrorinAddFriend('Friend with provided name already exist.');\r\n                    return;\r\n                  }\r\n              }\r\n              existingcontacts.push(new_friend);\r\n              setsearchedFriends([...existingcontacts]);\r\n              setfriendlist([...existingcontacts])\r\n              setsuccessinAddFriend('Friend Added successfully')\r\n              \r\n          } else {\r\n            seterrorinAddFriend(\"Friend's name cannot be empty\")\r\n          }\r\n        }\r\n    }\r\n\r\n   function handlePageChange(pageNumber) {\r\n        let upperLimit = parseInt(pageNumber)*4;\r\n        let lowerLimit = upperLimit - 4;\r\n       \r\n        if(upperLimit <= friends.length){\r\n            setcurrentPage(pageNumber);\r\n            setcurrentPageData(friends.slice(lowerLimit,upperLimit))\r\n                \r\n        }else{\r\n            setcurrentPage(pageNumber);\r\n            setcurrentPageData(friends.slice(lowerLimit))\r\n        }\r\n      }\r\n\r\n      function updateField(event){ \r\n        const value = event.target.value.replace(/[^a-zA-Z\\s]/g, \"\")\r\n        setnewfriend(value);\r\n        seterrorinAddFriend('') \r\n      }\r\n\r\n    return (\r\n        <div className=\"application\">\r\n              <div className=\"add-friend\">\r\n              <h3 className=\"header\">Add New Friend</h3>\r\n              <input className=\"searchbox\" type=\"text\" placeholder=\"Enter friend's name to add\" value={newfriend}  onChange={event => updateField(event)}\r\n                onKeyPress={(e)=>addNewFriend(e)}>\r\n              </input>\r\n               {errorinAddFriend ? <sub className=\"add-friend-error\">{errorinAddFriend}</sub> : null}\r\n               {successinAddFriend ? <sub className=\"add-friend-success\">{successinAddFriend}</sub> : null}\r\n              </div>\r\n\r\n            <div className=\"friend-list\">\r\n            <h3 className=\"header\">Friends List</h3>\r\n            <input className=\"searchbox\" type=\"text\" placeholder=\"Enter your friends name\" value={search} onChange={updateSearch}>\r\n            </input>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onRequestClose={toggleModal}\r\n                contentLabel=\"Are you sure you want to delete the friend from list\"\r\n                className=\"mymodal\"\r\n                overlayClassName=\"myoverlay\"\r\n            >\r\n                <div>Are you sure you want to delete {deletecontact}  from your friends list</div>\r\n                <div className=\"flex-basis\">\r\n                <button className=\"Modal-button\" onClick={deleteContact}>Yes</button>\r\n                <button className=\"Modal-button\" onClick={toggleModal}>No</button>\r\n                </div>\r\n            </Modal>\r\n            <ul className=\"flist-container\">\r\n                {\r\n                    currentPageData.map((friend) => {\r\n                        return (\r\n                            <li className=\"list-item\">\r\n                                <div className=\"flex\">\r\n                                    <div>\r\n                                        <p className=\"fname\">{friend.name}</p>\r\n                                        <sub className=\"sub-heading\">is your friend</sub>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <span onClick={() => updateFavourite(friend)} className={\"icon \" + (friend.isFavourite ? 'favourite' : '')} >\r\n                                            <i class=\"fa fa-heart\"></i>\r\n                                        </span>\r\n\r\n                                        <span onClick={()=>toggleModal(friend)} className=\"icon\">\r\n                                            <i class=\"fa fa-trash\"></i>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                    (friends.length === 0 ? <sub className=\"sub-heading\">No Friend found</sub> : null)\r\n\r\n                }\r\n            </ul>\r\n                <div className=\"pagination-box\">\r\n                    <Pagination\r\n                    activePage={currentPage}\r\n                    itemsCountPerPage={4}\r\n                    totalItemsCount={friends.length}\r\n                    pageRangeDisplayed={4}\r\n                    itemClass=\"pagination-list\"\r\n                    activeClass = \"pagination-active\"\r\n                    onChange={handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport {Friendslist} from './friends-list';\n\nfunction App() {\n\n  \n  return (\n    <div className=\"list-container\">\n      <Friendslist/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}